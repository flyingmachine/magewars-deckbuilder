(page "index.html"
  (:require [magewars-deckbuilder.deck :as d]))

(set! cljs.core/*print-fn* #(.log js/console %))

(def card-filters (cell d/attributes))
(defn add-filter
  [cf attr val]
  (merge-with into cf {attr #{val}}))
(defn remove-filter
  [cf attr val]
  (merge cf {attr (disj (get cf attr) val)}))

(defn map-set-filter
  [filters x]
  (every? #((second %) (get x (first %))) filters))
(def cards (cell= (filter (partial map-set-filter card-filters) d/deck)))
(defn filter-count
  [attr val]
  (cell= (count (filter #(= (get % attr) val) cards))))

(defn toggle-filter!
  [filters attr val]
  (fn []
    (let [f (if (get-in @filters [attr val]) remove-filter add-filter)]
      (swap! filters f attr val))))


(defn filter-val
  [filters attr val]
  (li
   (label
    (input :type "checkbox"
           :on-change (toggle-filter! filters attr val)
           :checked true)
    (text "~{val} ~{@(filter-count attr val)}"))))

(defn filter-attribute
  [[attr vals]]
  (div (h3 (text "~{attr}"))
       (ul (map (partial filter-val card-filters attr) vals))))

(html
 (head)
 (body
  (h1 "Hello, Dawg!")
  (div :class "filters"
       (map filter-attribute (sort first (seq d/attributes))))
  (loop-tpl :bindings [card cards]
            (div (text "~{card}")))))
